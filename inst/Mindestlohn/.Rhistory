cluster = vcovCL(reg1, cluster = ~regno)
stargazer(reg1, type = "text",
se = list(sqrt(diag(cluster))))
#Quelle?
library(ggdag)
install.packages('ggdag')
library(ggdag)
dag1 = dagify(Y ~ X + Z, Z ~ X)
library(ggdag)
dag1 = dagify(Y ~ X + Z, Z ~ X)
library(RTutor)
# Adapt working directory
setwd("C:/Users/lasse/Documents/GitHub/RTutorMindestlohn/inst/Mindestlohn")
ps.name = "Mindestlohn"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all packages you load in the problem set
libs = c("ggplot2","haven","stargazer","sandwich", "ggdac")
create.ps(sol.file=sol.file, ps.name=ps.name,libs=libs, rps.has.sol=TRUE, addons="quiz")
# Show the problem set in the webbrowser
show.ps(ps.name,sample.solution=FALSE,auto.save.code = TRUE)
library(RTutor)
# Adapt working directory
setwd("C:/Users/lasse/Documents/GitHub/RTutorMindestlohn/inst/Mindestlohn")
ps.name = "Mindestlohn"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all packages you load in the problem set
libs = c("ggplot2","haven","stargazer","sandwich", "ggdag")
create.ps(sol.file=sol.file, ps.name=ps.name,libs=libs, rps.has.sol=TRUE, addons="quiz")
# Show the problem set in the webbrowser
show.ps(ps.name,sample.solution=FALSE,auto.save.code = TRUE)
install.packages('ggdag')
dag1 = dagify(Y ~ X + Z, Z ~ X)
library(ggdag)
install.packages("vctrs")
library(vctrs)
library(ggdag)
dag1 = dagify(Y ~ X + Z, Z ~ X)
dag1 = dagify(Y ~ X + Z, Z ~ X)
ggdag(dag1)
dag <- dagitty("dag {
ln_avwage <- ctreat1
ln_avwage <- treat1_NMW
ln_avwage <- NMW
}")
dag <- dagify(
ln_avwage ~ ctreat1 + treat1_NMW + NMW,  # Abhängigkeiten von ln_avwage
labels = c(ctreat1 = "ctreat1", treat1_NMW = "treat1_NMW", NMW = "NMW", ln_avwage = "ln_avwage")
)
ggdag(dag) +
ggtitle("DAG für die Regression: ln_avwage ~ ctreat1 + treat1_NMW + NMW")
dag <- dagify(
ln_avwage ~ ctreat1 + treat1_NMW + NMW,  # Abhängigkeiten von ln_avwage
labels = c(ctreat1 = "ctreat1", treat1_NMW = "treat1_NMW", NMW = "NMW", ln_avwage = "ln_avwage")
)
ggdag(dag)
dag <- dagify(
ln_avwage ~ ctreat1 + treat1_NMW + NMW,
treat1_NMW ~ ctreat1 + NMW,
labels = c(ctreat1 = "ctreat1", treat1_NMW = "treat1_NMW", NMW = "NMW", ln_avwage = "ln_avwage")
)
ggdag(dag)
ggdag_adjustment_set(dag, node_size = 20)
dag <- dagify(
ln_avwage ~ ctreat1 + treat1_NMW + NMW,
treat1_NMW ~ ctreat1 + NMW,
labels = c(ctreat1 = "ctreat1", treat1_NMW = "treat1_NMW", NMW = "NMW", ln_avwage = "ln_avwage")
)
ggdag_adjustment_set(dag, node_size = 20)+
theme(legend.position = "bottom")
ggdag(dag, node_size = 20)
ggdag(dag, node_size = 20)+
theme_dag()
ggdag(dag, node_size = 20,stylized = TRUE)+
theme_dag()
ggdag(dag, node_size = 50)+
theme_dag()
ggdag(dag, node_size = 50, edge_type = "link_arc")+
theme_dag()
ggdag(dag, node_size = 30, edge_type = "link_arc")+
theme_dag()
ggdag(dag, node_size = 30, edge_type = "arc")+
theme_dag()
ggdag(dag, node_size = 30, edge_type = "diagonal")+
theme_dag()
ggdag(dag, node_size = 15, edge_type = "diagonal")+
theme_dag()
ggdag(dag, node_size = 15, text_size = 3, edge_type = "diagonal")+
theme_dag()
ggdag(dag, node_size = 15, text_size = 2, edge_type = "diagonal")+
theme_dag()
ggdag(dag, node_size = 15, text_size = 2, edge_type = "diagonal")+
theme_dag_blank()
ggdag(dag, node_size = 15, text_size = 2, edge_type = "link")+
theme_dag_blank()
dag <- dagify(
ln_avwage ~ ctreat1 + treat1_NMW + NMW,
treat1_NMW ~ ctreat1 + NMW,
labels = c(ctreat1 = "ctreat1", treat1_NMW = "treat1_NMW", NMW = "NMW", ln_avwage = "ln_avwage")
)
ggdag(dag, node_size = 15, text_size = 2, edge_type = "link", use_labels = "label")+
theme_dag_blank()
ggdag(dag, node_size = 30, text = FALSE, edge_type = "link", use_labels = "label")+
theme_dag_blank()
ggdag(dag, node_size = 20, text = FALSE, edge_type = "link", use_labels = "label")+
theme_dag_blank()
ggdag(dag, node_size = 18, text = FALSE, edge_type = "link", use_labels = "label")+
theme_dag_blank()
ggdag(dag, node_size = 18, text = FALSE, edge_type = "link", use_labels = "label")+
theme_dag_blank()+
geom_dag_edges(arrow(type = "closed"))
ggdag(dag, node_size = 18, text = FALSE, edge_type = "link", use_labels = "label")+
theme_dag_blank()+
geom_dag_edges(arrow_type = "closed"))
regiii = lm(ln_avwage ~ treat1_NMW, data = dat)
regiv = lm(ln_avwage ~ ctreat1 + treat1_NMW + NMW, data = dat)
stargazer(regi, regii, regiii, regiv, type = "text")
library(stargazer)
stargazer(regi, regii, regiii, regiv, type = "text")
regi = lm(ln_avwage ~ ctreat1, data = dat)
regii = lm(ln_avwage ~ NMW, data = dat)
regiii = lm(ln_avwage ~ treat1_NMW, data = dat)
regiv = lm(ln_avwage ~ ctreat1 + treat1_NMW + NMW, data = dat)
stargazer(regi, regii, regiii, regiv, type = "text")
library(RTutor)
# Adapt working directory
setwd("C:/Users/lasse/Documents/GitHub/RTutorMindestlohn/inst/Mindestlohn")
ps.name = "Mindestlohn"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all packages you load in the problem set
libs = c("ggplot2","haven","stargazer","sandwich", "ggdag")
create.ps(sol.file=sol.file, ps.name=ps.name,libs=libs, rps.has.sol=TRUE, addons="quiz")
# Show the problem set in the webbrowser
show.ps(ps.name,sample.solution=FALSE,auto.save.code = TRUE)
felm(ln_avwage ~ ctreat1 + treat1_NMW + NMW|0|0|regno, data=dat)
library(lfe)
felm(ln_avwage ~ ctreat1 + treat1_NMW + NMW|0|0|regno, data=dat)
regv = felm(ln_avwage ~ ctreat1 + treat1_NMW + NMW|0|0|regno, data=dat)
stargazer(regi, regii, regiii, regiv, regv, type = "text")
reg1 = lm(ln_avwage ~ ctreat1 + treat1_NMW + NMW, data = dat)
cluster = vcovCL(reg1, cluster = ~regno)
stargazer(reg1, type = "text",
se = list(sqrt(diag(cluster))))
#Quelle?
stargazer(regv, type ="text")
stargazer(regv, type ="text")
reg1 = lm(ln_avwage ~ ctreat1 + treat1_NMW + NMW, data = dat)
cluster = vcovCL(reg1, cluster = ~regno)
stargazer(reg1, type = "text",
se = list(sqrt(diag(cluster))))
#Quelle?
reg3 = lm(ln_avwage ~ ctreat1 + treat1_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk), data = dat)
cluster3 = vcovCL(reg3, cluster = ~regno)
stargazer(reg3, type = "text",
se = list(sqrt(diag(cluster3))))
reg3 = felm(ln_avwage ~ ctreat1 + treat1_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg3, type = "text")
reg4 = lm(net_pcm ~ ctreat1 + treat1_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk), data = dat)
cluster4 = vcovCL(reg4, cluster = ~regno)
stargazer(reg4, type = "text",
se = list(sqrt(diag(cluster4))))
reg4 = felm(net_pcm ~ ctreat1 + treat1_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg4, type = "text")
dat_trend_treat = dat %>%
filter(ctreat1 == 1) %>%
group_by(year)%>%
summarise("Treatment"=mean(ln_avwage, na.rm = TRUE))
dat_trend_control = dat %>%
filter(ctreat1 == 0) %>%
group_by(year) %>%
summarise("Control"=mean(ln_avwage, na.rm = TRUE))
ggplot(dat_trend)+
geom_line(aes(x = year, y = Treatment), colour= "blue", linetype = 1, linewidth = 0.8)+
geom_line(aes(x = year, y = Control), colour = "red", linetype = 1, linewidth = 0.8)+
geom_vline(xintercept = 1999)
#< task
#Datensatz einlesen
#>
dat_main = read_dta('main_fame.dta')
#< task
#Datensatz einlesen
#>
dat = read_dta('main_fame.dta')
head(dat)
summary(dat)
head(dat)
library(RTutor)
# Adapt working directory
setwd("C:/Users/lasse/Documents/GitHub/RTutorMindestlohn/inst/Mindestlohn")
ps.name = "Mindestlohn"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all packages you load in the problem set
libs = c("ggplot2","haven","stargazer","sandwich", "ggdag")
create.ps(sol.file=sol.file, ps.name=ps.name,libs=libs, rps.has.sol=TRUE, addons="quiz")
# Show the problem set in the webbrowser
show.ps(ps.name,sample.solution=FALSE,auto.save.code = TRUE)
library(RTutor)
# Adapt working directory
setwd("C:/Users/lasse/Documents/GitHub/RTutorMindestlohn/inst/Mindestlohn")
ps.name = "Mindestlohn"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all packages you load in the problem set
libs = c("ggplot2","haven","stargazer","sandwich", "ggdag")
create.ps(sol.file=sol.file, ps.name=ps.name,libs=libs, rps.has.sol=TRUE, addons="quiz")
# Show the problem set in the webbrowser
show.ps(ps.name,sample.solution=FALSE,auto.save.code = TRUE)
mean(ptwk, dat)
mean(dat$ptwk)
mean(dat$ptwk, na.rm = TRUE)
#< task
dat = read_dta('main_fame.dta')
#>
mean(dat$ptwk, na.rm = TRUE)
#< fill_in
mean_treat = dat %>%
filter(avwage <= ___) %>%
library(RTutor)
# Adapt working directory
setwd("C:/Users/lasse/Documents/GitHub/RTutorMindestlohn/inst/Mindestlohn")
ps.name = "Mindestlohn"; sol.file = paste0(ps.name,"_sol.Rmd")
# character vector of all packages you load in the problem set
libs = c("ggplot2","haven","stargazer","sandwich", "ggdag")
create.ps(sol.file=sol.file, ps.name=ps.name,libs=libs, rps.has.sol=TRUE, addons="quiz")
# Show the problem set in the webbrowser
show.ps(ps.name,sample.solution=FALSE,auto.save.code = TRUE)
dat = read_dta('main_fame.dta')
dat_ff1 = filter(dat, ff == 1)
dat_ff0 = filter(dat, ff == 0)
dat_ff1 %>%
group_by(year)%>%
summarise(length(year))
dat_ff0 %>%
group_by(year)%>%
summarise(length(year))
dat_ff0 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff1 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff0 = filter(dat_ff0, year==1996)
dat_ff1 = filter(dat_ff1, year==1996)
boxplot(dat_ff0$ln_avwage,dat_ff1$ln_avwage)
mean(dat_ff0$avwage, na.rm = TRUE)
mean(dat_ff1$avwage)
max(dat_ff1$avwage)
reg3 = felm(ln_avwage ~ ctreat1 + treat1_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg3, type = "text")
dat_ff0 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff1 %>%
group_by(pp)%>%
summarise(length(pp))
dat = read_dta('main_fame.dta')
dat_ff1 = filter(dat, ff == 1)
dat_ff0 = filter(dat, ff == 0)
dat_ff0 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff1 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff1 %>%
group_by(year)%>%
summarise(length(year))
dat_ff0 %>%
group_by(year)%>%
summarise(length(year))
dat_ff0 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff1 %>%
group_by(pp)%>%
summarise(length(pp))
dat_no_pp = dat %>%
filter(pp == 0)
dat_pp = dat %>%
filter(pp == 1)
boxplot(log(dat_no_pp$emp),log(dat_pp$emp))
boxplot(log(dat_no_pp$net_pcm),log(dat_pp$net_pcm))
boxplot(log(dat_no_pp$avwage),log(dat_pp$avwage))
dat_ff0 = filter(dat_ff0, year==1996)
dat_ff1 = filter(dat_ff1, year==1996)
boxplot(dat_ff0$ln_avwage,dat_ff1$ln_avwage)
mean(dat_ff0$avwage, na.rm = TRUE)
mean(dat_ff1$avwage)
max(dat_ff1$avwage)
dat_ff0 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff1 %>%
group_by(pp)%>%
summarise(length(pp))
dat = read_dta('main_fame.dta')
dat_ff1 = filter(dat, ff == 1)
dat_ff0 = filter(dat, ff == 0)
dat_ff0 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff1 %>%
group_by(pp)%>%
summarise(length(pp))
dat_ff0 = filter(dat_ff0, year==1996)
dat_ff1 = filter(dat_ff1, year==1996)
boxplot(dat_ff0$ln_avwage,dat_ff1$ln_avwage)
mean(dat_ff0$avwage, na.rm = TRUE)
mean(dat_ff1$avwage)
max(dat_ff1$avwage)
dat_01 = dat %>%
filter(pp == 0) %>%
filter(ff == 1)
View(dat_01)
dat = filter(dat, ff == 1)
reg7 = felm(ln_avwage ~ ctreat1 + treat1_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg8 = felm(net_pcm ~ ctreat1 + treat1_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg7, reg8, type = "text")
reg7 = felm(ln_avwage ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg8 = felm(net_pcm ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg7, reg8, type = "text")
reg7 = felm(ln_avwage ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg8 = felm(net_pcm ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg7, reg8, type = "text", covariate.labels = "placebo")
reg7 = felm(ln_avwage ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg8 = felm(net_pcm ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg7, reg8, type = "text", covariate.labels = c("placebo"))
reg7 = felm(ln_avwage ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg8 = felm(net_pcm ~ ptreat + ptreat_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg7, reg8, type = "text")
reg5 = felm(ln_avwage ~ c_avwage99 + c_avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg5 = felm(ln_avwage ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg5 = felm(ln_avwage ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg6 = felm(net_pcm ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg5 = felm(ln_avwage ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg6 = felm(net_pcm ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg5, reg6, type = "html")
reg5 = felm(ln_avwage ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg6 = felm(net_pcm ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg5, reg6, type = "text")
#< task
dat_raw = read_dta('main_fame.dta')
dat = filter(dat_raw, pp == 1)
#>
reg5 = felm(ln_avwage ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg6 = felm(net_pcm ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg5, reg6, type = "text")
reg5 = felm(-ln_avwage ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg5 = felm(ln_avwage ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg6 = felm(net_pcm ~ c_avwage99 + avwage99_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg5, reg6, type = "text")
reg9 = felm(ln_avwage ~ c_avwage96 + avwage96_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
dat = read_dta('main_fame.dta')
dat_ff1 = filter(dat, ff == 1)
dat_ff0 = filter(dat, ff == 0)
reg9 = felm(ln_avwage ~ c_avwage96 + avwage96_NMW + NMW + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg9 = felm(ln_avwage ~ c_avwage96 + avwage96_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg10 = felm(net_pcm ~ c_avwage96 + avwage96_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg9 = felm(ln_avwage ~ c_avwage96 + avwage96_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg10 = felm(net_pcm ~ c_avwage96 + avwage96_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg9, reg10, type = "text")
dat = filter(dat, ff == 1)
reg9 = felm(ln_avwage ~ c_avwage96 + avwage96_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
reg10 = felm(net_pcm ~ c_avwage96 + avwage96_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
stargazer(reg9, reg10, type = "text")
reg9 = felm(-(ln_avwage) ~ c_avwage96 + avwage96_placebo + placebo + grad2 + unionmem + ptwk + female +
factor(sic2) + factor(year) + factor(gorwk)| 0 | 0 | regno, data = dat)
# Ersetzen der Werte in avwage
avwage <- avwage * 1000
# Ersetzen der Werte in avwage
dat$avwage = avwage * 1000
# Ersetzen der Werte in avwage
dat$avwage_test = dat$avwage * 1000
# Setzen einer Startbedingung (entsprechend "set more off" in Stata)
options(max.print = 10000)
# Initialisierung der Schleife mit i=10000
i <- 10000
while (i <= 16000) {
# POLICY
# Löschen der Variablen treat1 und ctreat1
dat$treat1 <- NULL
dat$ctreat1 <- NULL
# Erstellen der Variablen treat1 und ctreat1
dat$treat1 <- ifelse(dat$avwage <= i & dat$year == 1999, 1, 0)
dat$ctreat1 <- ave(dat$treat1, dat$regno, FUN = max)
dat[[paste0("treat", i, "_NMW")]] <- dat$ctreat1 * dat$NMW
# Regression (verwenden der lm() Funktion in R)
reg <- lm(net_pcm ~ ctreat1 + dat[[paste0("treat", i, "_NMW")]] + NMW + grad2 + unionmem + ptwk + female + factor(sic2) + factor(year) + factor(gorwk),
data = dat, subset = pp == 1)
# Speichern der Koeffizienten und Standardfehler für die Variablen
assign(paste0("prof_btreat", i), coef(reg)["treat1_NMW"])
assign(paste0("prof_bse", i), summary(reg)$coefficients["treat1_NMW", "Std. Error"])
# PLACEBO
# Erstellen der Placebo-Variablen
dat[[paste0("ptreat", i)]] <- ifelse(dat$avwage <= i & dat$year == 1996, 1, 0)
dat[[paste0("max_ptreat", i)]] <- ave(dat[[paste0("ptreat", i)]], dat$regno, FUN = max)
dat[[paste0("ptreat", i, "_placebo")]] <- dat[[paste0("max_ptreat", i)]] * dat$placebo
# Placebo-Regression
reg_placebo <- lm(net_pcm ~ dat[[paste0("max_ptreat", i)]] + dat[[paste0("ptreat", i, "_placebo")]] + placebo + grad2 + unionmem + ptwk + female +
factor(year) + factor(sic2) + factor(gorwk), data = dat, subset = ff == 1)
# Speichern der Koeffizienten und Standardfehler für Placebo
assign(paste0("prof_placebo_btreat", i), coef(reg_placebo)["ptreat1_placebo"])
assign(paste0("prof_placebo_bse", i), summary(reg_placebo)$coefficients["ptreat1_placebo", "Std. Error"])
# Erhöhen von i um 100
i <- i + 100
}
View(dat)
# Ersetzen der Werte in avwage
dat$avwage_test = dat$avwage * 1000
# Setzen einer Startbedingung (entsprechend "set more off" in Stata)
options(max.print = 10000)
# Initialisierung der Schleife mit i=10000
i <- 10000
while (i <= 16000) {
# POLICY
# Löschen der Variablen treat1 und ctreat1
dat$treat1 <- NULL
dat$ctreat1 <- NULL
# Erstellen der Variablen treat1 und ctreat1
dat$treat1 <- ifelse(dat$avwage <= i & dat$year == 1999, 1, 0)
dat$ctreat1 <- ave(dat$treat1, dat$regno, FUN = max)
dat[[paste0("treat", i, "_NMW")]] <- dat$ctreat1 * dat$NMW
# Regression (verwenden der lm() Funktion in R)
reg <- lm(net_pcm ~ ctreat1 + dat[[paste0("treat", i, "_NMW")]] + NMW + grad2 + unionmem + ptwk + female + factor(sic2) + factor(year) + factor(gorwk),
data = dat, subset = pp == 1)
# Speichern der Koeffizienten und Standardfehler für die Variablen
assign(paste0("prof_btreat", i), coef(reg)["treat1_NMW"])
assign(paste0("prof_bse", i), summary(reg)$coefficients["treat1_NMW", "Std. Error"])
# PLACEBO
# Erstellen der Placebo-Variablen
dat[[paste0("ptreat", i)]] <- ifelse(dat$avwage <= i & dat$year == 1996, 1, 0)
dat[[paste0("max_ptreat", i)]] <- ave(dat[[paste0("ptreat", i)]], dat$regno, FUN = max)
dat[[paste0("ptreat", i, "_placebo")]] <- dat[[paste0("max_ptreat", i)]] * dat$placebo
# Placebo-Regression
reg_placebo <- lm(net_pcm ~ dat[[paste0("max_ptreat", i)]] + dat[[paste0("ptreat", i, "_placebo")]] + placebo + grad2 + unionmem + ptwk + female +
factor(year) + factor(sic2) + factor(gorwk), data = dat, subset = ff == 1)
# Speichern der Koeffizienten und Standardfehler für Placebo
assign(paste0("prof_placebo_btreat", i), coef(reg_placebo)["ptreat1_placebo"])
assign(paste0("prof_placebo_bse", i), summary(reg_placebo)$coefficients["ptreat1_placebo", "Std. Error"])
# Erhöhen von i um 100
i <- i + 100
}
# Ersetzen der Werte in avwage
dat$avwage_test = dat$avwage * 1000
# Setzen einer Startbedingung (entsprechend "set more off" in Stata)
options(max.print = 10000)
# Initialisierung der Schleife mit i=10000
i <- 10000
while (i <= 16000) {
# POLICY
# Löschen der Variablen treat1 und ctreat1
dat$treat1 <- NULL
dat$ctreat1 <- NULL
# Erstellen der Variablen treat1 und ctreat1
dat$treat1 <- ifelse(dat$avwage <= i & dat$year == 1999, 1, 0)
dat$ctreat1 <- ave(dat$treat1, dat$regno, FUN = max)
dat[[paste0("treat", i, "_NMW")]] <- dat$ctreat1 * dat$NMW
# Regression (verwenden der lm() Funktion in R)
reg <- lm(net_pcm ~ ctreat1 + dat[[paste0("treat", i, "_NMW")]] + NMW + grad2 + unionmem + ptwk + female + factor(sic2) + factor(year) + factor(gorwk),
data = dat, subset = pp == 1)
# Speichern der Koeffizienten und Standardfehler für die Variablen
assign(paste0("prof_btreat", i), coef(reg)["treat1_NMW"])
assign(paste0("prof_bse", i), summary(reg)$coefficients["treat1_NMW", "Std. Error"])
# PLACEBO
# Erstellen der Placebo-Variablen
dat[[paste0("ptreat", i)]] <- ifelse(dat$avwage <= i & dat$year == 1996, 1, 0)
dat[[paste0("max_ptreat", i)]] <- ave(dat[[paste0("ptreat", i)]], dat$regno, FUN = max)
dat[[paste0("ptreat", i, "_placebo")]] <- dat[[paste0("max_ptreat", i)]] * dat$placebo
# Placebo-Regression
reg_placebo <- lm(net_pcm ~ dat[[paste0("max_ptreat", i)]] + dat[[paste0("ptreat", i, "_placebo")]] + placebo + grad2 + unionmem + ptwk + female +
factor(year) + factor(sic2) + factor(gorwk), data = dat, subset = ff == 1)
# Speichern der Koeffizienten und Standardfehler für Placebo
assign(paste0("prof_placebo_btreat", i), coef(reg_placebo)["ptreat1_placebo"])
assign(paste0("prof_placebo_bse", i), summary(reg_placebo)$coefficients["ptreat1_placebo", "Std. Error"])
# Erhöhen von i um 100
i <- i + 100
}
library(ggplot2)
ggplot(dat)
ggplot(dat, aes(x = avwage))
ggplot(dat, aes(x = avwage, y = treat1_NMW))
ggplot(dat)+
geom_line(aes(x=avwage, y = treat1_NMW))
